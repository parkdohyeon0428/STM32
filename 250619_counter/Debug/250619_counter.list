
250619_counter.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000a9c  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000c34  08000c34  00002060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000c34  08000c34  00002060  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000c34  08000c34  00002060  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000c34  08000c34  00002060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000c34  08000c34  00001c34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000c38  08000c38  00001c38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  08000c3c  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000040  20000060  08000c9c  00002060  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000a0  08000c9c  000020a0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00002060  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000108e  00000000  00000000  00002090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000008e5  00000000  00000000  0000311e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000150  00000000  00000000  00003a08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000d8  00000000  00000000  00003b58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018617  00000000  00000000  00003c30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002359  00000000  00000000  0001c247  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00048a0d  00000000  00000000  0001e5a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00066fad  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002cc  00000000  00000000  00066ff0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000041  00000000  00000000  000672bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000060 	.word	0x20000060
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000c1c 	.word	0x08000c1c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000064 	.word	0x20000064
 80001d4:	08000c1c 	.word	0x08000c1c

080001d8 <ap_main>:
Button_Handler_t hBtnStop;
Button_Handler_t hBtnClear;


int ap_main()
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	b082      	sub	sp, #8
 80001dc:	af00      	add	r7, sp, #0


    //uint8_t data = 1;
    int led_state = Stop;
 80001de:	2301      	movs	r3, #1
 80001e0:	607b      	str	r3, [r7, #4]
    uint32_t data = 0;
 80001e2:	2300      	movs	r3, #0
 80001e4:	603b      	str	r3, [r7, #0]
//    	FND_SegSel(0);
//		FND_SegSel(1);
//		FND_SegSel(2);
//		FND_SegSel(3);
//		fnd_Write(0x01);
    	FND_DisplayNumber(data);
 80001e6:	6838      	ldr	r0, [r7, #0]
 80001e8:	f000 fc34 	bl	8000a54 <FND_DisplayNumber>

        switch (led_state)
 80001ec:	687b      	ldr	r3, [r7, #4]
 80001ee:	2b02      	cmp	r3, #2
 80001f0:	d026      	beq.n	8000240 <ap_main+0x68>
 80001f2:	687b      	ldr	r3, [r7, #4]
 80001f4:	2b02      	cmp	r3, #2
 80001f6:	dcf6      	bgt.n	80001e6 <ap_main+0xe>
 80001f8:	687b      	ldr	r3, [r7, #4]
 80001fa:	2b00      	cmp	r3, #0
 80001fc:	d014      	beq.n	8000228 <ap_main+0x50>
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	2b01      	cmp	r3, #1
 8000202:	d1f0      	bne.n	80001e6 <ap_main+0xe>
        {
        case Stop:
        	if (Button_GetState(&hBtnStart) == ACT_RELEASED)
 8000204:	4817      	ldr	r0, [pc, #92]	@ (8000264 <ap_main+0x8c>)
 8000206:	f000 f870 	bl	80002ea <Button_GetState>
 800020a:	4603      	mov	r3, r0
 800020c:	2b02      	cmp	r3, #2
 800020e:	d102      	bne.n	8000216 <ap_main+0x3e>
        		led_state = Start;
 8000210:	2300      	movs	r3, #0
 8000212:	607b      	str	r3, [r7, #4]
        	else if (Button_GetState(&hBtnClear) == ACT_RELEASED)
        		led_state = Clear;
        	break;
 8000214:	e01f      	b.n	8000256 <ap_main+0x7e>
        	else if (Button_GetState(&hBtnClear) == ACT_RELEASED)
 8000216:	4814      	ldr	r0, [pc, #80]	@ (8000268 <ap_main+0x90>)
 8000218:	f000 f867 	bl	80002ea <Button_GetState>
 800021c:	4603      	mov	r3, r0
 800021e:	2b02      	cmp	r3, #2
 8000220:	d119      	bne.n	8000256 <ap_main+0x7e>
        		led_state = Clear;
 8000222:	2302      	movs	r3, #2
 8000224:	607b      	str	r3, [r7, #4]
        	break;
 8000226:	e016      	b.n	8000256 <ap_main+0x7e>

        case Start:
        	data += 1;
 8000228:	683b      	ldr	r3, [r7, #0]
 800022a:	3301      	adds	r3, #1
 800022c:	603b      	str	r3, [r7, #0]
        	if (Button_GetState(&hBtnStop) == ACT_RELEASED)
 800022e:	480f      	ldr	r0, [pc, #60]	@ (800026c <ap_main+0x94>)
 8000230:	f000 f85b 	bl	80002ea <Button_GetState>
 8000234:	4603      	mov	r3, r0
 8000236:	2b02      	cmp	r3, #2
 8000238:	d10f      	bne.n	800025a <ap_main+0x82>
        		led_state = Stop;
 800023a:	2301      	movs	r3, #1
 800023c:	607b      	str	r3, [r7, #4]
			break;
 800023e:	e00c      	b.n	800025a <ap_main+0x82>

        case Clear:
        	data = 0;
 8000240:	2300      	movs	r3, #0
 8000242:	603b      	str	r3, [r7, #0]
        	if (Button_GetState(&hBtnStart) == ACT_RELEASED)
 8000244:	4807      	ldr	r0, [pc, #28]	@ (8000264 <ap_main+0x8c>)
 8000246:	f000 f850 	bl	80002ea <Button_GetState>
 800024a:	4603      	mov	r3, r0
 800024c:	2b02      	cmp	r3, #2
 800024e:	d106      	bne.n	800025e <ap_main+0x86>
				led_state = Start;
 8000250:	2300      	movs	r3, #0
 8000252:	607b      	str	r3, [r7, #4]
			break;
 8000254:	e003      	b.n	800025e <ap_main+0x86>
        	break;
 8000256:	bf00      	nop
 8000258:	e7c5      	b.n	80001e6 <ap_main+0xe>
			break;
 800025a:	bf00      	nop
 800025c:	e7c3      	b.n	80001e6 <ap_main+0xe>
			break;
 800025e:	bf00      	nop
    {
 8000260:	e7c1      	b.n	80001e6 <ap_main+0xe>
 8000262:	bf00      	nop
 8000264:	2000007c 	.word	0x2000007c
 8000268:	20000094 	.word	0x20000094
 800026c:	20000088 	.word	0x20000088

08000270 <ap_init>:
    return 0;
}


void ap_init()
{
 8000270:	b580      	push	{r7, lr}
 8000272:	af00      	add	r7, sp, #0
	SystemClock_Init();
 8000274:	f000 f908 	bl	8000488 <SystemClock_Init>
	LEDBar_Init();
 8000278:	f000 f8d4 	bl	8000424 <LEDBar_Init>
    Button_Init(&hBtnClear, GPIOB, 5);
 800027c:	2205      	movs	r2, #5
 800027e:	4908      	ldr	r1, [pc, #32]	@ (80002a0 <ap_init+0x30>)
 8000280:	4808      	ldr	r0, [pc, #32]	@ (80002a4 <ap_init+0x34>)
 8000282:	f000 f817 	bl	80002b4 <Button_Init>
    Button_Init(&hBtnStart, GPIOB, 3);
 8000286:	2203      	movs	r2, #3
 8000288:	4905      	ldr	r1, [pc, #20]	@ (80002a0 <ap_init+0x30>)
 800028a:	4807      	ldr	r0, [pc, #28]	@ (80002a8 <ap_init+0x38>)
 800028c:	f000 f812 	bl	80002b4 <Button_Init>
    Button_Init(&hBtnStop, GPIOA, 10);
 8000290:	220a      	movs	r2, #10
 8000292:	4906      	ldr	r1, [pc, #24]	@ (80002ac <ap_init+0x3c>)
 8000294:	4806      	ldr	r0, [pc, #24]	@ (80002b0 <ap_init+0x40>)
 8000296:	f000 f80d 	bl	80002b4 <Button_Init>
}
 800029a:	bf00      	nop
 800029c:	bd80      	pop	{r7, pc}
 800029e:	bf00      	nop
 80002a0:	40020400 	.word	0x40020400
 80002a4:	20000094 	.word	0x20000094
 80002a8:	2000007c 	.word	0x2000007c
 80002ac:	40020000 	.word	0x40020000
 80002b0:	20000088 	.word	0x20000088

080002b4 <Button_Init>:


enum {PUSHED = 0, RELEASED};

void Button_Init(Button_Handler_t *hbtn, GPIO_TypeDef * GPIOx, uint32_t pinNum)
{
 80002b4:	b580      	push	{r7, lr}
 80002b6:	b084      	sub	sp, #16
 80002b8:	af00      	add	r7, sp, #0
 80002ba:	60f8      	str	r0, [r7, #12]
 80002bc:	60b9      	str	r1, [r7, #8]
 80002be:	607a      	str	r2, [r7, #4]
   hbtn->GPIOx = GPIOx;
 80002c0:	68fb      	ldr	r3, [r7, #12]
 80002c2:	68ba      	ldr	r2, [r7, #8]
 80002c4:	601a      	str	r2, [r3, #0]
   hbtn->pinNum = pinNum;
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	687a      	ldr	r2, [r7, #4]
 80002ca:	605a      	str	r2, [r3, #4]
   hbtn->prevState = RELEASED;
 80002cc:	68fb      	ldr	r3, [r7, #12]
 80002ce:	2201      	movs	r2, #1
 80002d0:	609a      	str	r2, [r3, #8]

   GPIO_Init(hbtn->GPIOx, hbtn->pinNum, INPUT);
 80002d2:	68fb      	ldr	r3, [r7, #12]
 80002d4:	6818      	ldr	r0, [r3, #0]
 80002d6:	68fb      	ldr	r3, [r7, #12]
 80002d8:	685b      	ldr	r3, [r3, #4]
 80002da:	2201      	movs	r2, #1
 80002dc:	4619      	mov	r1, r3
 80002de:	f000 f834 	bl	800034a <GPIO_Init>
}
 80002e2:	bf00      	nop
 80002e4:	3710      	adds	r7, #16
 80002e6:	46bd      	mov	sp, r7
 80002e8:	bd80      	pop	{r7, pc}

080002ea <Button_GetState>:



button_state_t Button_GetState(Button_Handler_t *hbtn)
{
 80002ea:	b580      	push	{r7, lr}
 80002ec:	b084      	sub	sp, #16
 80002ee:	af00      	add	r7, sp, #0
 80002f0:	6078      	str	r0, [r7, #4]
   //static uint32_t prevState[4] = RELEASED;
   uint32_t curState;
   curState = GPIO_ReadPin(hbtn->GPIOx, hbtn->pinNum);
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	681a      	ldr	r2, [r3, #0]
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	685b      	ldr	r3, [r3, #4]
 80002fa:	4619      	mov	r1, r3
 80002fc:	4610      	mov	r0, r2
 80002fe:	f000 f879 	bl	80003f4 <GPIO_ReadPin>
 8000302:	60f8      	str	r0, [r7, #12]

   if ((hbtn->prevState == RELEASED) && (curState == PUSHED)) { // button released -> pushed
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	689b      	ldr	r3, [r3, #8]
 8000308:	2b01      	cmp	r3, #1
 800030a:	d10a      	bne.n	8000322 <Button_GetState+0x38>
 800030c:	68fb      	ldr	r3, [r7, #12]
 800030e:	2b00      	cmp	r3, #0
 8000310:	d107      	bne.n	8000322 <Button_GetState+0x38>
      delay(2); // debounce
 8000312:	2002      	movs	r0, #2
 8000314:	f000 f8d4 	bl	80004c0 <delay>
      hbtn->prevState = PUSHED;
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	2200      	movs	r2, #0
 800031c:	609a      	str	r2, [r3, #8]
      return ACT_PUSHED;
 800031e:	2301      	movs	r3, #1
 8000320:	e00f      	b.n	8000342 <Button_GetState+0x58>
   }
   else if ((hbtn->prevState == PUSHED) && (curState == RELEASED)) { // button pushed -> released
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	689b      	ldr	r3, [r3, #8]
 8000326:	2b00      	cmp	r3, #0
 8000328:	d10a      	bne.n	8000340 <Button_GetState+0x56>
 800032a:	68fb      	ldr	r3, [r7, #12]
 800032c:	2b01      	cmp	r3, #1
 800032e:	d107      	bne.n	8000340 <Button_GetState+0x56>
      delay(2); // debounce
 8000330:	2002      	movs	r0, #2
 8000332:	f000 f8c5 	bl	80004c0 <delay>
      hbtn->prevState = RELEASED;
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	2201      	movs	r2, #1
 800033a:	609a      	str	r2, [r3, #8]
      return ACT_RELEASED;
 800033c:	2302      	movs	r3, #2
 800033e:	e000      	b.n	8000342 <Button_GetState+0x58>
   }
   return NO_ACT;
 8000340:	2300      	movs	r3, #0
}
 8000342:	4618      	mov	r0, r3
 8000344:	3710      	adds	r7, #16
 8000346:	46bd      	mov	sp, r7
 8000348:	bd80      	pop	{r7, pc}

0800034a <GPIO_Init>:
 */
#include "GPIO.h"
#include <stdint.h>

void GPIO_Init(GPIO_TypeDef *GPIOx, uint32_t pinNum, pinMode pin_Mode)
{
 800034a:	b480      	push	{r7}
 800034c:	b085      	sub	sp, #20
 800034e:	af00      	add	r7, sp, #0
 8000350:	60f8      	str	r0, [r7, #12]
 8000352:	60b9      	str	r1, [r7, #8]
 8000354:	4613      	mov	r3, r2
 8000356:	71fb      	strb	r3, [r7, #7]
   if(pin_Mode == OUTPUT)
 8000358:	79fb      	ldrb	r3, [r7, #7]
 800035a:	2b00      	cmp	r3, #0
 800035c:	d115      	bne.n	800038a <GPIO_Init+0x40>
   {
      GPIOx -> MODER  |=  (0x01U << (pinNum*2));
 800035e:	68fb      	ldr	r3, [r7, #12]
 8000360:	681a      	ldr	r2, [r3, #0]
 8000362:	68bb      	ldr	r3, [r7, #8]
 8000364:	005b      	lsls	r3, r3, #1
 8000366:	2101      	movs	r1, #1
 8000368:	fa01 f303 	lsl.w	r3, r1, r3
 800036c:	431a      	orrs	r2, r3
 800036e:	68fb      	ldr	r3, [r7, #12]
 8000370:	601a      	str	r2, [r3, #0]
      GPIOx -> MODER  &= ~(0x02U << (pinNum*2));
 8000372:	68fb      	ldr	r3, [r7, #12]
 8000374:	681a      	ldr	r2, [r3, #0]
 8000376:	68bb      	ldr	r3, [r7, #8]
 8000378:	005b      	lsls	r3, r3, #1
 800037a:	2102      	movs	r1, #2
 800037c:	fa01 f303 	lsl.w	r3, r1, r3
 8000380:	43db      	mvns	r3, r3
 8000382:	401a      	ands	r2, r3
 8000384:	68fb      	ldr	r3, [r7, #12]
 8000386:	601a      	str	r2, [r3, #0]
   }
   else {
      GPIOx -> MODER  &= ~(0x03U << (pinNum*2));
   }
}
 8000388:	e00a      	b.n	80003a0 <GPIO_Init+0x56>
      GPIOx -> MODER  &= ~(0x03U << (pinNum*2));
 800038a:	68fb      	ldr	r3, [r7, #12]
 800038c:	681a      	ldr	r2, [r3, #0]
 800038e:	68bb      	ldr	r3, [r7, #8]
 8000390:	005b      	lsls	r3, r3, #1
 8000392:	2103      	movs	r1, #3
 8000394:	fa01 f303 	lsl.w	r3, r1, r3
 8000398:	43db      	mvns	r3, r3
 800039a:	401a      	ands	r2, r3
 800039c:	68fb      	ldr	r3, [r7, #12]
 800039e:	601a      	str	r2, [r3, #0]
}
 80003a0:	bf00      	nop
 80003a2:	3714      	adds	r7, #20
 80003a4:	46bd      	mov	sp, r7
 80003a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003aa:	4770      	bx	lr

080003ac <GPIO_WritePin>:

void GPIO_WritePin(GPIO_TypeDef *GPIOx, uint32_t pinNum, pinState pin_State)
{
 80003ac:	b480      	push	{r7}
 80003ae:	b085      	sub	sp, #20
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	60f8      	str	r0, [r7, #12]
 80003b4:	60b9      	str	r1, [r7, #8]
 80003b6:	4613      	mov	r3, r2
 80003b8:	71fb      	strb	r3, [r7, #7]
   if(pin_State == PIN_SET) {
 80003ba:	79fb      	ldrb	r3, [r7, #7]
 80003bc:	2b01      	cmp	r3, #1
 80003be:	d109      	bne.n	80003d4 <GPIO_WritePin+0x28>
   GPIOx -> ODR |= (1U<<pinNum);
 80003c0:	68fb      	ldr	r3, [r7, #12]
 80003c2:	695a      	ldr	r2, [r3, #20]
 80003c4:	2101      	movs	r1, #1
 80003c6:	68bb      	ldr	r3, [r7, #8]
 80003c8:	fa01 f303 	lsl.w	r3, r1, r3
 80003cc:	431a      	orrs	r2, r3
 80003ce:	68fb      	ldr	r3, [r7, #12]
 80003d0:	615a      	str	r2, [r3, #20]
   }
   else {
      GPIOx-> ODR &= ~(1U<<pinNum);
   }
}
 80003d2:	e009      	b.n	80003e8 <GPIO_WritePin+0x3c>
      GPIOx-> ODR &= ~(1U<<pinNum);
 80003d4:	68fb      	ldr	r3, [r7, #12]
 80003d6:	695a      	ldr	r2, [r3, #20]
 80003d8:	2101      	movs	r1, #1
 80003da:	68bb      	ldr	r3, [r7, #8]
 80003dc:	fa01 f303 	lsl.w	r3, r1, r3
 80003e0:	43db      	mvns	r3, r3
 80003e2:	401a      	ands	r2, r3
 80003e4:	68fb      	ldr	r3, [r7, #12]
 80003e6:	615a      	str	r2, [r3, #20]
}
 80003e8:	bf00      	nop
 80003ea:	3714      	adds	r7, #20
 80003ec:	46bd      	mov	sp, r7
 80003ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003f2:	4770      	bx	lr

080003f4 <GPIO_ReadPin>:

uint32_t GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint32_t pinNum)
{
 80003f4:	b480      	push	{r7}
 80003f6:	b083      	sub	sp, #12
 80003f8:	af00      	add	r7, sp, #0
 80003fa:	6078      	str	r0, [r7, #4]
 80003fc:	6039      	str	r1, [r7, #0]
return ((GPIOx->IDR & (1U<<pinNum)) ? 1 : 0); // 1bit만 내보내기 위한
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	691a      	ldr	r2, [r3, #16]
 8000402:	2101      	movs	r1, #1
 8000404:	683b      	ldr	r3, [r7, #0]
 8000406:	fa01 f303 	lsl.w	r3, r1, r3
 800040a:	4013      	ands	r3, r2
 800040c:	2b00      	cmp	r3, #0
 800040e:	bf14      	ite	ne
 8000410:	2301      	movne	r3, #1
 8000412:	2300      	moveq	r3, #0
 8000414:	b2db      	uxtb	r3, r3

}
 8000416:	4618      	mov	r0, r3
 8000418:	370c      	adds	r7, #12
 800041a:	46bd      	mov	sp, r7
 800041c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000420:	4770      	bx	lr
	...

08000424 <LEDBar_Init>:
		}
	}
}

void LEDBar_Init()
{
 8000424:	b580      	push	{r7, lr}
 8000426:	af00      	add	r7, sp, #0
	   GPIO_Init(GPIOA, 0, OUTPUT);
 8000428:	2200      	movs	r2, #0
 800042a:	2100      	movs	r1, #0
 800042c:	4813      	ldr	r0, [pc, #76]	@ (800047c <LEDBar_Init+0x58>)
 800042e:	f7ff ff8c 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOA, 1, OUTPUT);
 8000432:	2200      	movs	r2, #0
 8000434:	2101      	movs	r1, #1
 8000436:	4811      	ldr	r0, [pc, #68]	@ (800047c <LEDBar_Init+0x58>)
 8000438:	f7ff ff87 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOA, 4, OUTPUT);
 800043c:	2200      	movs	r2, #0
 800043e:	2104      	movs	r1, #4
 8000440:	480e      	ldr	r0, [pc, #56]	@ (800047c <LEDBar_Init+0x58>)
 8000442:	f7ff ff82 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOB, 0, OUTPUT);
 8000446:	2200      	movs	r2, #0
 8000448:	2100      	movs	r1, #0
 800044a:	480d      	ldr	r0, [pc, #52]	@ (8000480 <LEDBar_Init+0x5c>)
 800044c:	f7ff ff7d 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOC, 1, OUTPUT);
 8000450:	2200      	movs	r2, #0
 8000452:	2101      	movs	r1, #1
 8000454:	480b      	ldr	r0, [pc, #44]	@ (8000484 <LEDBar_Init+0x60>)
 8000456:	f7ff ff78 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOC, 0, OUTPUT);
 800045a:	2200      	movs	r2, #0
 800045c:	2100      	movs	r1, #0
 800045e:	4809      	ldr	r0, [pc, #36]	@ (8000484 <LEDBar_Init+0x60>)
 8000460:	f7ff ff73 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOC, 2, OUTPUT);
 8000464:	2200      	movs	r2, #0
 8000466:	2102      	movs	r1, #2
 8000468:	4806      	ldr	r0, [pc, #24]	@ (8000484 <LEDBar_Init+0x60>)
 800046a:	f7ff ff6e 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOC, 3, OUTPUT);
 800046e:	2200      	movs	r2, #0
 8000470:	2103      	movs	r1, #3
 8000472:	4804      	ldr	r0, [pc, #16]	@ (8000484 <LEDBar_Init+0x60>)
 8000474:	f7ff ff69 	bl	800034a <GPIO_Init>
}
 8000478:	bf00      	nop
 800047a:	bd80      	pop	{r7, pc}
 800047c:	40020000 	.word	0x40020000
 8000480:	40020400 	.word	0x40020400
 8000484:	40020800 	.word	0x40020800

08000488 <SystemClock_Init>:


#include "SystemClock.h"

void SystemClock_Init()
{
 8000488:	b480      	push	{r7}
 800048a:	af00      	add	r7, sp, #0
	   RCC -> AHB1ENR |= (1U << 0);//  RCC_AHB1ENR 해당위치의 비트만 1로 만들겠다
 800048c:	4b0b      	ldr	r3, [pc, #44]	@ (80004bc <SystemClock_Init+0x34>)
 800048e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000490:	4a0a      	ldr	r2, [pc, #40]	@ (80004bc <SystemClock_Init+0x34>)
 8000492:	f043 0301 	orr.w	r3, r3, #1
 8000496:	6313      	str	r3, [r2, #48]	@ 0x30
	   RCC -> AHB1ENR |= (1U << 1);//  RCC_AHB1ENR 해당위치의 비트만 1로 만들겠다
 8000498:	4b08      	ldr	r3, [pc, #32]	@ (80004bc <SystemClock_Init+0x34>)
 800049a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800049c:	4a07      	ldr	r2, [pc, #28]	@ (80004bc <SystemClock_Init+0x34>)
 800049e:	f043 0302 	orr.w	r3, r3, #2
 80004a2:	6313      	str	r3, [r2, #48]	@ 0x30
	   RCC -> AHB1ENR |= (1U << 2);//  RCC_AHB1ENR 해당위치의 비트만 1로 만들겠다
 80004a4:	4b05      	ldr	r3, [pc, #20]	@ (80004bc <SystemClock_Init+0x34>)
 80004a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004a8:	4a04      	ldr	r2, [pc, #16]	@ (80004bc <SystemClock_Init+0x34>)
 80004aa:	f043 0304 	orr.w	r3, r3, #4
 80004ae:	6313      	str	r3, [r2, #48]	@ 0x30

}
 80004b0:	bf00      	nop
 80004b2:	46bd      	mov	sp, r7
 80004b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b8:	4770      	bx	lr
 80004ba:	bf00      	nop
 80004bc:	40023800 	.word	0x40023800

080004c0 <delay>:

void delay(int loop)
{
 80004c0:	b480      	push	{r7}
 80004c2:	b085      	sub	sp, #20
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	6078      	str	r0, [r7, #4]
	for (int j =0; j<loop; j++) {
 80004c8:	2300      	movs	r3, #0
 80004ca:	60fb      	str	r3, [r7, #12]
 80004cc:	e00c      	b.n	80004e8 <delay+0x28>
		for(int i = 0; i<1000; i++){}
 80004ce:	2300      	movs	r3, #0
 80004d0:	60bb      	str	r3, [r7, #8]
 80004d2:	e002      	b.n	80004da <delay+0x1a>
 80004d4:	68bb      	ldr	r3, [r7, #8]
 80004d6:	3301      	adds	r3, #1
 80004d8:	60bb      	str	r3, [r7, #8]
 80004da:	68bb      	ldr	r3, [r7, #8]
 80004dc:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80004e0:	dbf8      	blt.n	80004d4 <delay+0x14>
	for (int j =0; j<loop; j++) {
 80004e2:	68fb      	ldr	r3, [r7, #12]
 80004e4:	3301      	adds	r3, #1
 80004e6:	60fb      	str	r3, [r7, #12]
 80004e8:	68fa      	ldr	r2, [r7, #12]
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	429a      	cmp	r2, r3
 80004ee:	dbee      	blt.n	80004ce <delay+0xe>
	}
}
 80004f0:	bf00      	nop
 80004f2:	bf00      	nop
 80004f4:	3714      	adds	r7, #20
 80004f6:	46bd      	mov	sp, r7
 80004f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004fc:	4770      	bx	lr
	...

08000500 <fnd_Init>:
//		}
//	}
//}

void fnd_Init()
{
 8000500:	b580      	push	{r7, lr}
 8000502:	af00      	add	r7, sp, #0
	   GPIO_Init(GPIOC, 8, OUTPUT);
 8000504:	2200      	movs	r2, #0
 8000506:	2108      	movs	r1, #8
 8000508:	481d      	ldr	r0, [pc, #116]	@ (8000580 <fnd_Init+0x80>)
 800050a:	f7ff ff1e 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOC, 6, OUTPUT);
 800050e:	2200      	movs	r2, #0
 8000510:	2106      	movs	r1, #6
 8000512:	481b      	ldr	r0, [pc, #108]	@ (8000580 <fnd_Init+0x80>)
 8000514:	f7ff ff19 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOC, 5, OUTPUT);
 8000518:	2200      	movs	r2, #0
 800051a:	2105      	movs	r1, #5
 800051c:	4818      	ldr	r0, [pc, #96]	@ (8000580 <fnd_Init+0x80>)
 800051e:	f7ff ff14 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOA, 12, OUTPUT);
 8000522:	2200      	movs	r2, #0
 8000524:	210c      	movs	r1, #12
 8000526:	4817      	ldr	r0, [pc, #92]	@ (8000584 <fnd_Init+0x84>)
 8000528:	f7ff ff0f 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOA, 11, OUTPUT);
 800052c:	2200      	movs	r2, #0
 800052e:	210b      	movs	r1, #11
 8000530:	4814      	ldr	r0, [pc, #80]	@ (8000584 <fnd_Init+0x84>)
 8000532:	f7ff ff0a 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOB, 12, OUTPUT);
 8000536:	2200      	movs	r2, #0
 8000538:	210c      	movs	r1, #12
 800053a:	4813      	ldr	r0, [pc, #76]	@ (8000588 <fnd_Init+0x88>)
 800053c:	f7ff ff05 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOB, 2, OUTPUT);
 8000540:	2200      	movs	r2, #0
 8000542:	2102      	movs	r1, #2
 8000544:	4810      	ldr	r0, [pc, #64]	@ (8000588 <fnd_Init+0x88>)
 8000546:	f7ff ff00 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOB, 1, OUTPUT);
 800054a:	2200      	movs	r2, #0
 800054c:	2101      	movs	r1, #1
 800054e:	480e      	ldr	r0, [pc, #56]	@ (8000588 <fnd_Init+0x88>)
 8000550:	f7ff fefb 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOB, 15, OUTPUT);
 8000554:	2200      	movs	r2, #0
 8000556:	210f      	movs	r1, #15
 8000558:	480b      	ldr	r0, [pc, #44]	@ (8000588 <fnd_Init+0x88>)
 800055a:	f7ff fef6 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOB, 14, OUTPUT);
 800055e:	2200      	movs	r2, #0
 8000560:	210e      	movs	r1, #14
 8000562:	4809      	ldr	r0, [pc, #36]	@ (8000588 <fnd_Init+0x88>)
 8000564:	f7ff fef1 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOB, 13, OUTPUT);
 8000568:	2200      	movs	r2, #0
 800056a:	210d      	movs	r1, #13
 800056c:	4806      	ldr	r0, [pc, #24]	@ (8000588 <fnd_Init+0x88>)
 800056e:	f7ff feec 	bl	800034a <GPIO_Init>
	   GPIO_Init(GPIOC, 4, OUTPUT);
 8000572:	2200      	movs	r2, #0
 8000574:	2104      	movs	r1, #4
 8000576:	4802      	ldr	r0, [pc, #8]	@ (8000580 <fnd_Init+0x80>)
 8000578:	f7ff fee7 	bl	800034a <GPIO_Init>
}
 800057c:	bf00      	nop
 800057e:	bd80      	pop	{r7, pc}
 8000580:	40020800 	.word	0x40020800
 8000584:	40020000 	.word	0x40020000
 8000588:	40020400 	.word	0x40020400

0800058c <fnd_Write>:



void fnd_Write(uint32_t fnd_data)
{
 800058c:	b580      	push	{r7, lr}
 800058e:	b082      	sub	sp, #8
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
	switch(fnd_data)
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	2b09      	cmp	r3, #9
 8000598:	f200 8255 	bhi.w	8000a46 <fnd_Write+0x4ba>
 800059c:	a201      	add	r2, pc, #4	@ (adr r2, 80005a4 <fnd_Write+0x18>)
 800059e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80005a2:	bf00      	nop
 80005a4:	080005cd 	.word	0x080005cd
 80005a8:	0800063f 	.word	0x0800063f
 80005ac:	080006b1 	.word	0x080006b1
 80005b0:	08000723 	.word	0x08000723
 80005b4:	08000795 	.word	0x08000795
 80005b8:	0800080d 	.word	0x0800080d
 80005bc:	0800087f 	.word	0x0800087f
 80005c0:	080008f1 	.word	0x080008f1
 80005c4:	08000963 	.word	0x08000963
 80005c8:	080009d5 	.word	0x080009d5
	{
	case 0:
		GPIO_WritePin(FND_FONT[0].GPIOx, FND_FONT[0].pinNum, PIN_SET);   // a
 80005cc:	4b8e      	ldr	r3, [pc, #568]	@ (8000808 <fnd_Write+0x27c>)
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	4a8d      	ldr	r2, [pc, #564]	@ (8000808 <fnd_Write+0x27c>)
 80005d2:	6851      	ldr	r1, [r2, #4]
 80005d4:	2201      	movs	r2, #1
 80005d6:	4618      	mov	r0, r3
 80005d8:	f7ff fee8 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[1].GPIOx, FND_FONT[1].pinNum, PIN_SET);   // b
 80005dc:	4b8a      	ldr	r3, [pc, #552]	@ (8000808 <fnd_Write+0x27c>)
 80005de:	689b      	ldr	r3, [r3, #8]
 80005e0:	4a89      	ldr	r2, [pc, #548]	@ (8000808 <fnd_Write+0x27c>)
 80005e2:	68d1      	ldr	r1, [r2, #12]
 80005e4:	2201      	movs	r2, #1
 80005e6:	4618      	mov	r0, r3
 80005e8:	f7ff fee0 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[2].GPIOx, FND_FONT[2].pinNum, PIN_SET);   // c
 80005ec:	4b86      	ldr	r3, [pc, #536]	@ (8000808 <fnd_Write+0x27c>)
 80005ee:	691b      	ldr	r3, [r3, #16]
 80005f0:	4a85      	ldr	r2, [pc, #532]	@ (8000808 <fnd_Write+0x27c>)
 80005f2:	6951      	ldr	r1, [r2, #20]
 80005f4:	2201      	movs	r2, #1
 80005f6:	4618      	mov	r0, r3
 80005f8:	f7ff fed8 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[3].GPIOx, FND_FONT[3].pinNum, PIN_SET);   // d
 80005fc:	4b82      	ldr	r3, [pc, #520]	@ (8000808 <fnd_Write+0x27c>)
 80005fe:	699b      	ldr	r3, [r3, #24]
 8000600:	4a81      	ldr	r2, [pc, #516]	@ (8000808 <fnd_Write+0x27c>)
 8000602:	69d1      	ldr	r1, [r2, #28]
 8000604:	2201      	movs	r2, #1
 8000606:	4618      	mov	r0, r3
 8000608:	f7ff fed0 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[4].GPIOx, FND_FONT[4].pinNum, PIN_SET);   // e
 800060c:	4b7e      	ldr	r3, [pc, #504]	@ (8000808 <fnd_Write+0x27c>)
 800060e:	6a1b      	ldr	r3, [r3, #32]
 8000610:	4a7d      	ldr	r2, [pc, #500]	@ (8000808 <fnd_Write+0x27c>)
 8000612:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000614:	2201      	movs	r2, #1
 8000616:	4618      	mov	r0, r3
 8000618:	f7ff fec8 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[5].GPIOx, FND_FONT[5].pinNum, PIN_SET);   // f
 800061c:	4b7a      	ldr	r3, [pc, #488]	@ (8000808 <fnd_Write+0x27c>)
 800061e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000620:	4a79      	ldr	r2, [pc, #484]	@ (8000808 <fnd_Write+0x27c>)
 8000622:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000624:	2201      	movs	r2, #1
 8000626:	4618      	mov	r0, r3
 8000628:	f7ff fec0 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[6].GPIOx, FND_FONT[6].pinNum, PIN_RESET); // g
 800062c:	4b76      	ldr	r3, [pc, #472]	@ (8000808 <fnd_Write+0x27c>)
 800062e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000630:	4a75      	ldr	r2, [pc, #468]	@ (8000808 <fnd_Write+0x27c>)
 8000632:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000634:	2200      	movs	r2, #0
 8000636:	4618      	mov	r0, r3
 8000638:	f7ff feb8 	bl	80003ac <GPIO_WritePin>
		break;
 800063c:	e203      	b.n	8000a46 <fnd_Write+0x4ba>

	case 1:
		GPIO_WritePin(FND_FONT[0].GPIOx, FND_FONT[0].pinNum, PIN_RESET);
 800063e:	4b72      	ldr	r3, [pc, #456]	@ (8000808 <fnd_Write+0x27c>)
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	4a71      	ldr	r2, [pc, #452]	@ (8000808 <fnd_Write+0x27c>)
 8000644:	6851      	ldr	r1, [r2, #4]
 8000646:	2200      	movs	r2, #0
 8000648:	4618      	mov	r0, r3
 800064a:	f7ff feaf 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[1].GPIOx, FND_FONT[1].pinNum, PIN_SET);
 800064e:	4b6e      	ldr	r3, [pc, #440]	@ (8000808 <fnd_Write+0x27c>)
 8000650:	689b      	ldr	r3, [r3, #8]
 8000652:	4a6d      	ldr	r2, [pc, #436]	@ (8000808 <fnd_Write+0x27c>)
 8000654:	68d1      	ldr	r1, [r2, #12]
 8000656:	2201      	movs	r2, #1
 8000658:	4618      	mov	r0, r3
 800065a:	f7ff fea7 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[2].GPIOx, FND_FONT[2].pinNum, PIN_SET);
 800065e:	4b6a      	ldr	r3, [pc, #424]	@ (8000808 <fnd_Write+0x27c>)
 8000660:	691b      	ldr	r3, [r3, #16]
 8000662:	4a69      	ldr	r2, [pc, #420]	@ (8000808 <fnd_Write+0x27c>)
 8000664:	6951      	ldr	r1, [r2, #20]
 8000666:	2201      	movs	r2, #1
 8000668:	4618      	mov	r0, r3
 800066a:	f7ff fe9f 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[3].GPIOx, FND_FONT[3].pinNum, PIN_RESET);
 800066e:	4b66      	ldr	r3, [pc, #408]	@ (8000808 <fnd_Write+0x27c>)
 8000670:	699b      	ldr	r3, [r3, #24]
 8000672:	4a65      	ldr	r2, [pc, #404]	@ (8000808 <fnd_Write+0x27c>)
 8000674:	69d1      	ldr	r1, [r2, #28]
 8000676:	2200      	movs	r2, #0
 8000678:	4618      	mov	r0, r3
 800067a:	f7ff fe97 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[4].GPIOx, FND_FONT[4].pinNum, PIN_RESET);
 800067e:	4b62      	ldr	r3, [pc, #392]	@ (8000808 <fnd_Write+0x27c>)
 8000680:	6a1b      	ldr	r3, [r3, #32]
 8000682:	4a61      	ldr	r2, [pc, #388]	@ (8000808 <fnd_Write+0x27c>)
 8000684:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000686:	2200      	movs	r2, #0
 8000688:	4618      	mov	r0, r3
 800068a:	f7ff fe8f 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[5].GPIOx, FND_FONT[5].pinNum, PIN_RESET);
 800068e:	4b5e      	ldr	r3, [pc, #376]	@ (8000808 <fnd_Write+0x27c>)
 8000690:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000692:	4a5d      	ldr	r2, [pc, #372]	@ (8000808 <fnd_Write+0x27c>)
 8000694:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000696:	2200      	movs	r2, #0
 8000698:	4618      	mov	r0, r3
 800069a:	f7ff fe87 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[6].GPIOx, FND_FONT[6].pinNum, PIN_RESET);
 800069e:	4b5a      	ldr	r3, [pc, #360]	@ (8000808 <fnd_Write+0x27c>)
 80006a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006a2:	4a59      	ldr	r2, [pc, #356]	@ (8000808 <fnd_Write+0x27c>)
 80006a4:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 80006a6:	2200      	movs	r2, #0
 80006a8:	4618      	mov	r0, r3
 80006aa:	f7ff fe7f 	bl	80003ac <GPIO_WritePin>
		break;
 80006ae:	e1ca      	b.n	8000a46 <fnd_Write+0x4ba>

	case 2:
		GPIO_WritePin(FND_FONT[0].GPIOx, FND_FONT[0].pinNum, PIN_SET);
 80006b0:	4b55      	ldr	r3, [pc, #340]	@ (8000808 <fnd_Write+0x27c>)
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	4a54      	ldr	r2, [pc, #336]	@ (8000808 <fnd_Write+0x27c>)
 80006b6:	6851      	ldr	r1, [r2, #4]
 80006b8:	2201      	movs	r2, #1
 80006ba:	4618      	mov	r0, r3
 80006bc:	f7ff fe76 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[1].GPIOx, FND_FONT[1].pinNum, PIN_SET);
 80006c0:	4b51      	ldr	r3, [pc, #324]	@ (8000808 <fnd_Write+0x27c>)
 80006c2:	689b      	ldr	r3, [r3, #8]
 80006c4:	4a50      	ldr	r2, [pc, #320]	@ (8000808 <fnd_Write+0x27c>)
 80006c6:	68d1      	ldr	r1, [r2, #12]
 80006c8:	2201      	movs	r2, #1
 80006ca:	4618      	mov	r0, r3
 80006cc:	f7ff fe6e 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[2].GPIOx, FND_FONT[2].pinNum, PIN_RESET);
 80006d0:	4b4d      	ldr	r3, [pc, #308]	@ (8000808 <fnd_Write+0x27c>)
 80006d2:	691b      	ldr	r3, [r3, #16]
 80006d4:	4a4c      	ldr	r2, [pc, #304]	@ (8000808 <fnd_Write+0x27c>)
 80006d6:	6951      	ldr	r1, [r2, #20]
 80006d8:	2200      	movs	r2, #0
 80006da:	4618      	mov	r0, r3
 80006dc:	f7ff fe66 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[3].GPIOx, FND_FONT[3].pinNum, PIN_SET);
 80006e0:	4b49      	ldr	r3, [pc, #292]	@ (8000808 <fnd_Write+0x27c>)
 80006e2:	699b      	ldr	r3, [r3, #24]
 80006e4:	4a48      	ldr	r2, [pc, #288]	@ (8000808 <fnd_Write+0x27c>)
 80006e6:	69d1      	ldr	r1, [r2, #28]
 80006e8:	2201      	movs	r2, #1
 80006ea:	4618      	mov	r0, r3
 80006ec:	f7ff fe5e 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[4].GPIOx, FND_FONT[4].pinNum, PIN_SET);
 80006f0:	4b45      	ldr	r3, [pc, #276]	@ (8000808 <fnd_Write+0x27c>)
 80006f2:	6a1b      	ldr	r3, [r3, #32]
 80006f4:	4a44      	ldr	r2, [pc, #272]	@ (8000808 <fnd_Write+0x27c>)
 80006f6:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80006f8:	2201      	movs	r2, #1
 80006fa:	4618      	mov	r0, r3
 80006fc:	f7ff fe56 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[5].GPIOx, FND_FONT[5].pinNum, PIN_RESET);
 8000700:	4b41      	ldr	r3, [pc, #260]	@ (8000808 <fnd_Write+0x27c>)
 8000702:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000704:	4a40      	ldr	r2, [pc, #256]	@ (8000808 <fnd_Write+0x27c>)
 8000706:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000708:	2200      	movs	r2, #0
 800070a:	4618      	mov	r0, r3
 800070c:	f7ff fe4e 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[6].GPIOx, FND_FONT[6].pinNum, PIN_SET);
 8000710:	4b3d      	ldr	r3, [pc, #244]	@ (8000808 <fnd_Write+0x27c>)
 8000712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000714:	4a3c      	ldr	r2, [pc, #240]	@ (8000808 <fnd_Write+0x27c>)
 8000716:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000718:	2201      	movs	r2, #1
 800071a:	4618      	mov	r0, r3
 800071c:	f7ff fe46 	bl	80003ac <GPIO_WritePin>
		break;
 8000720:	e191      	b.n	8000a46 <fnd_Write+0x4ba>

	case 3:
		GPIO_WritePin(FND_FONT[0].GPIOx, FND_FONT[0].pinNum, PIN_SET);
 8000722:	4b39      	ldr	r3, [pc, #228]	@ (8000808 <fnd_Write+0x27c>)
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	4a38      	ldr	r2, [pc, #224]	@ (8000808 <fnd_Write+0x27c>)
 8000728:	6851      	ldr	r1, [r2, #4]
 800072a:	2201      	movs	r2, #1
 800072c:	4618      	mov	r0, r3
 800072e:	f7ff fe3d 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[1].GPIOx, FND_FONT[1].pinNum, PIN_SET);
 8000732:	4b35      	ldr	r3, [pc, #212]	@ (8000808 <fnd_Write+0x27c>)
 8000734:	689b      	ldr	r3, [r3, #8]
 8000736:	4a34      	ldr	r2, [pc, #208]	@ (8000808 <fnd_Write+0x27c>)
 8000738:	68d1      	ldr	r1, [r2, #12]
 800073a:	2201      	movs	r2, #1
 800073c:	4618      	mov	r0, r3
 800073e:	f7ff fe35 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[2].GPIOx, FND_FONT[2].pinNum, PIN_SET);
 8000742:	4b31      	ldr	r3, [pc, #196]	@ (8000808 <fnd_Write+0x27c>)
 8000744:	691b      	ldr	r3, [r3, #16]
 8000746:	4a30      	ldr	r2, [pc, #192]	@ (8000808 <fnd_Write+0x27c>)
 8000748:	6951      	ldr	r1, [r2, #20]
 800074a:	2201      	movs	r2, #1
 800074c:	4618      	mov	r0, r3
 800074e:	f7ff fe2d 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[3].GPIOx, FND_FONT[3].pinNum, PIN_SET);
 8000752:	4b2d      	ldr	r3, [pc, #180]	@ (8000808 <fnd_Write+0x27c>)
 8000754:	699b      	ldr	r3, [r3, #24]
 8000756:	4a2c      	ldr	r2, [pc, #176]	@ (8000808 <fnd_Write+0x27c>)
 8000758:	69d1      	ldr	r1, [r2, #28]
 800075a:	2201      	movs	r2, #1
 800075c:	4618      	mov	r0, r3
 800075e:	f7ff fe25 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[4].GPIOx, FND_FONT[4].pinNum, PIN_RESET);
 8000762:	4b29      	ldr	r3, [pc, #164]	@ (8000808 <fnd_Write+0x27c>)
 8000764:	6a1b      	ldr	r3, [r3, #32]
 8000766:	4a28      	ldr	r2, [pc, #160]	@ (8000808 <fnd_Write+0x27c>)
 8000768:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 800076a:	2200      	movs	r2, #0
 800076c:	4618      	mov	r0, r3
 800076e:	f7ff fe1d 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[5].GPIOx, FND_FONT[5].pinNum, PIN_RESET);
 8000772:	4b25      	ldr	r3, [pc, #148]	@ (8000808 <fnd_Write+0x27c>)
 8000774:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000776:	4a24      	ldr	r2, [pc, #144]	@ (8000808 <fnd_Write+0x27c>)
 8000778:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 800077a:	2200      	movs	r2, #0
 800077c:	4618      	mov	r0, r3
 800077e:	f7ff fe15 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[6].GPIOx, FND_FONT[6].pinNum, PIN_SET);
 8000782:	4b21      	ldr	r3, [pc, #132]	@ (8000808 <fnd_Write+0x27c>)
 8000784:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000786:	4a20      	ldr	r2, [pc, #128]	@ (8000808 <fnd_Write+0x27c>)
 8000788:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800078a:	2201      	movs	r2, #1
 800078c:	4618      	mov	r0, r3
 800078e:	f7ff fe0d 	bl	80003ac <GPIO_WritePin>
		break;
 8000792:	e158      	b.n	8000a46 <fnd_Write+0x4ba>

	case 4:
		GPIO_WritePin(FND_FONT[0].GPIOx, FND_FONT[0].pinNum, PIN_RESET);
 8000794:	4b1c      	ldr	r3, [pc, #112]	@ (8000808 <fnd_Write+0x27c>)
 8000796:	681b      	ldr	r3, [r3, #0]
 8000798:	4a1b      	ldr	r2, [pc, #108]	@ (8000808 <fnd_Write+0x27c>)
 800079a:	6851      	ldr	r1, [r2, #4]
 800079c:	2200      	movs	r2, #0
 800079e:	4618      	mov	r0, r3
 80007a0:	f7ff fe04 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[1].GPIOx, FND_FONT[1].pinNum, PIN_SET);
 80007a4:	4b18      	ldr	r3, [pc, #96]	@ (8000808 <fnd_Write+0x27c>)
 80007a6:	689b      	ldr	r3, [r3, #8]
 80007a8:	4a17      	ldr	r2, [pc, #92]	@ (8000808 <fnd_Write+0x27c>)
 80007aa:	68d1      	ldr	r1, [r2, #12]
 80007ac:	2201      	movs	r2, #1
 80007ae:	4618      	mov	r0, r3
 80007b0:	f7ff fdfc 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[2].GPIOx, FND_FONT[2].pinNum, PIN_SET);
 80007b4:	4b14      	ldr	r3, [pc, #80]	@ (8000808 <fnd_Write+0x27c>)
 80007b6:	691b      	ldr	r3, [r3, #16]
 80007b8:	4a13      	ldr	r2, [pc, #76]	@ (8000808 <fnd_Write+0x27c>)
 80007ba:	6951      	ldr	r1, [r2, #20]
 80007bc:	2201      	movs	r2, #1
 80007be:	4618      	mov	r0, r3
 80007c0:	f7ff fdf4 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[3].GPIOx, FND_FONT[3].pinNum, PIN_RESET);
 80007c4:	4b10      	ldr	r3, [pc, #64]	@ (8000808 <fnd_Write+0x27c>)
 80007c6:	699b      	ldr	r3, [r3, #24]
 80007c8:	4a0f      	ldr	r2, [pc, #60]	@ (8000808 <fnd_Write+0x27c>)
 80007ca:	69d1      	ldr	r1, [r2, #28]
 80007cc:	2200      	movs	r2, #0
 80007ce:	4618      	mov	r0, r3
 80007d0:	f7ff fdec 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[4].GPIOx, FND_FONT[4].pinNum, PIN_RESET);
 80007d4:	4b0c      	ldr	r3, [pc, #48]	@ (8000808 <fnd_Write+0x27c>)
 80007d6:	6a1b      	ldr	r3, [r3, #32]
 80007d8:	4a0b      	ldr	r2, [pc, #44]	@ (8000808 <fnd_Write+0x27c>)
 80007da:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80007dc:	2200      	movs	r2, #0
 80007de:	4618      	mov	r0, r3
 80007e0:	f7ff fde4 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[5].GPIOx, FND_FONT[5].pinNum, PIN_SET);
 80007e4:	4b08      	ldr	r3, [pc, #32]	@ (8000808 <fnd_Write+0x27c>)
 80007e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80007e8:	4a07      	ldr	r2, [pc, #28]	@ (8000808 <fnd_Write+0x27c>)
 80007ea:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 80007ec:	2201      	movs	r2, #1
 80007ee:	4618      	mov	r0, r3
 80007f0:	f7ff fddc 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[6].GPIOx, FND_FONT[6].pinNum, PIN_SET);
 80007f4:	4b04      	ldr	r3, [pc, #16]	@ (8000808 <fnd_Write+0x27c>)
 80007f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80007f8:	4a03      	ldr	r2, [pc, #12]	@ (8000808 <fnd_Write+0x27c>)
 80007fa:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 80007fc:	2201      	movs	r2, #1
 80007fe:	4618      	mov	r0, r3
 8000800:	f7ff fdd4 	bl	80003ac <GPIO_WritePin>
		break;
 8000804:	e11f      	b.n	8000a46 <fnd_Write+0x4ba>
 8000806:	bf00      	nop
 8000808:	20000000 	.word	0x20000000

	case 5:
		GPIO_WritePin(FND_FONT[0].GPIOx, FND_FONT[0].pinNum, PIN_SET);
 800080c:	4b90      	ldr	r3, [pc, #576]	@ (8000a50 <fnd_Write+0x4c4>)
 800080e:	681b      	ldr	r3, [r3, #0]
 8000810:	4a8f      	ldr	r2, [pc, #572]	@ (8000a50 <fnd_Write+0x4c4>)
 8000812:	6851      	ldr	r1, [r2, #4]
 8000814:	2201      	movs	r2, #1
 8000816:	4618      	mov	r0, r3
 8000818:	f7ff fdc8 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[1].GPIOx, FND_FONT[1].pinNum, PIN_RESET);
 800081c:	4b8c      	ldr	r3, [pc, #560]	@ (8000a50 <fnd_Write+0x4c4>)
 800081e:	689b      	ldr	r3, [r3, #8]
 8000820:	4a8b      	ldr	r2, [pc, #556]	@ (8000a50 <fnd_Write+0x4c4>)
 8000822:	68d1      	ldr	r1, [r2, #12]
 8000824:	2200      	movs	r2, #0
 8000826:	4618      	mov	r0, r3
 8000828:	f7ff fdc0 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[2].GPIOx, FND_FONT[2].pinNum, PIN_SET);
 800082c:	4b88      	ldr	r3, [pc, #544]	@ (8000a50 <fnd_Write+0x4c4>)
 800082e:	691b      	ldr	r3, [r3, #16]
 8000830:	4a87      	ldr	r2, [pc, #540]	@ (8000a50 <fnd_Write+0x4c4>)
 8000832:	6951      	ldr	r1, [r2, #20]
 8000834:	2201      	movs	r2, #1
 8000836:	4618      	mov	r0, r3
 8000838:	f7ff fdb8 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[3].GPIOx, FND_FONT[3].pinNum, PIN_SET);
 800083c:	4b84      	ldr	r3, [pc, #528]	@ (8000a50 <fnd_Write+0x4c4>)
 800083e:	699b      	ldr	r3, [r3, #24]
 8000840:	4a83      	ldr	r2, [pc, #524]	@ (8000a50 <fnd_Write+0x4c4>)
 8000842:	69d1      	ldr	r1, [r2, #28]
 8000844:	2201      	movs	r2, #1
 8000846:	4618      	mov	r0, r3
 8000848:	f7ff fdb0 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[4].GPIOx, FND_FONT[4].pinNum, PIN_RESET);
 800084c:	4b80      	ldr	r3, [pc, #512]	@ (8000a50 <fnd_Write+0x4c4>)
 800084e:	6a1b      	ldr	r3, [r3, #32]
 8000850:	4a7f      	ldr	r2, [pc, #508]	@ (8000a50 <fnd_Write+0x4c4>)
 8000852:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000854:	2200      	movs	r2, #0
 8000856:	4618      	mov	r0, r3
 8000858:	f7ff fda8 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[5].GPIOx, FND_FONT[5].pinNum, PIN_SET);
 800085c:	4b7c      	ldr	r3, [pc, #496]	@ (8000a50 <fnd_Write+0x4c4>)
 800085e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000860:	4a7b      	ldr	r2, [pc, #492]	@ (8000a50 <fnd_Write+0x4c4>)
 8000862:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000864:	2201      	movs	r2, #1
 8000866:	4618      	mov	r0, r3
 8000868:	f7ff fda0 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[6].GPIOx, FND_FONT[6].pinNum, PIN_SET);
 800086c:	4b78      	ldr	r3, [pc, #480]	@ (8000a50 <fnd_Write+0x4c4>)
 800086e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000870:	4a77      	ldr	r2, [pc, #476]	@ (8000a50 <fnd_Write+0x4c4>)
 8000872:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000874:	2201      	movs	r2, #1
 8000876:	4618      	mov	r0, r3
 8000878:	f7ff fd98 	bl	80003ac <GPIO_WritePin>
		break;
 800087c:	e0e3      	b.n	8000a46 <fnd_Write+0x4ba>

	case 6:
		GPIO_WritePin(FND_FONT[0].GPIOx, FND_FONT[0].pinNum, PIN_SET);
 800087e:	4b74      	ldr	r3, [pc, #464]	@ (8000a50 <fnd_Write+0x4c4>)
 8000880:	681b      	ldr	r3, [r3, #0]
 8000882:	4a73      	ldr	r2, [pc, #460]	@ (8000a50 <fnd_Write+0x4c4>)
 8000884:	6851      	ldr	r1, [r2, #4]
 8000886:	2201      	movs	r2, #1
 8000888:	4618      	mov	r0, r3
 800088a:	f7ff fd8f 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[1].GPIOx, FND_FONT[1].pinNum, PIN_RESET);
 800088e:	4b70      	ldr	r3, [pc, #448]	@ (8000a50 <fnd_Write+0x4c4>)
 8000890:	689b      	ldr	r3, [r3, #8]
 8000892:	4a6f      	ldr	r2, [pc, #444]	@ (8000a50 <fnd_Write+0x4c4>)
 8000894:	68d1      	ldr	r1, [r2, #12]
 8000896:	2200      	movs	r2, #0
 8000898:	4618      	mov	r0, r3
 800089a:	f7ff fd87 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[2].GPIOx, FND_FONT[2].pinNum, PIN_SET);
 800089e:	4b6c      	ldr	r3, [pc, #432]	@ (8000a50 <fnd_Write+0x4c4>)
 80008a0:	691b      	ldr	r3, [r3, #16]
 80008a2:	4a6b      	ldr	r2, [pc, #428]	@ (8000a50 <fnd_Write+0x4c4>)
 80008a4:	6951      	ldr	r1, [r2, #20]
 80008a6:	2201      	movs	r2, #1
 80008a8:	4618      	mov	r0, r3
 80008aa:	f7ff fd7f 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[3].GPIOx, FND_FONT[3].pinNum, PIN_SET);
 80008ae:	4b68      	ldr	r3, [pc, #416]	@ (8000a50 <fnd_Write+0x4c4>)
 80008b0:	699b      	ldr	r3, [r3, #24]
 80008b2:	4a67      	ldr	r2, [pc, #412]	@ (8000a50 <fnd_Write+0x4c4>)
 80008b4:	69d1      	ldr	r1, [r2, #28]
 80008b6:	2201      	movs	r2, #1
 80008b8:	4618      	mov	r0, r3
 80008ba:	f7ff fd77 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[4].GPIOx, FND_FONT[4].pinNum, PIN_SET);
 80008be:	4b64      	ldr	r3, [pc, #400]	@ (8000a50 <fnd_Write+0x4c4>)
 80008c0:	6a1b      	ldr	r3, [r3, #32]
 80008c2:	4a63      	ldr	r2, [pc, #396]	@ (8000a50 <fnd_Write+0x4c4>)
 80008c4:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80008c6:	2201      	movs	r2, #1
 80008c8:	4618      	mov	r0, r3
 80008ca:	f7ff fd6f 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[5].GPIOx, FND_FONT[5].pinNum, PIN_SET);
 80008ce:	4b60      	ldr	r3, [pc, #384]	@ (8000a50 <fnd_Write+0x4c4>)
 80008d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80008d2:	4a5f      	ldr	r2, [pc, #380]	@ (8000a50 <fnd_Write+0x4c4>)
 80008d4:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 80008d6:	2201      	movs	r2, #1
 80008d8:	4618      	mov	r0, r3
 80008da:	f7ff fd67 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[6].GPIOx, FND_FONT[6].pinNum, PIN_SET);
 80008de:	4b5c      	ldr	r3, [pc, #368]	@ (8000a50 <fnd_Write+0x4c4>)
 80008e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80008e2:	4a5b      	ldr	r2, [pc, #364]	@ (8000a50 <fnd_Write+0x4c4>)
 80008e4:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 80008e6:	2201      	movs	r2, #1
 80008e8:	4618      	mov	r0, r3
 80008ea:	f7ff fd5f 	bl	80003ac <GPIO_WritePin>
		break;
 80008ee:	e0aa      	b.n	8000a46 <fnd_Write+0x4ba>

	case 7:
		GPIO_WritePin(FND_FONT[0].GPIOx, FND_FONT[0].pinNum, PIN_SET);
 80008f0:	4b57      	ldr	r3, [pc, #348]	@ (8000a50 <fnd_Write+0x4c4>)
 80008f2:	681b      	ldr	r3, [r3, #0]
 80008f4:	4a56      	ldr	r2, [pc, #344]	@ (8000a50 <fnd_Write+0x4c4>)
 80008f6:	6851      	ldr	r1, [r2, #4]
 80008f8:	2201      	movs	r2, #1
 80008fa:	4618      	mov	r0, r3
 80008fc:	f7ff fd56 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[1].GPIOx, FND_FONT[1].pinNum, PIN_SET);
 8000900:	4b53      	ldr	r3, [pc, #332]	@ (8000a50 <fnd_Write+0x4c4>)
 8000902:	689b      	ldr	r3, [r3, #8]
 8000904:	4a52      	ldr	r2, [pc, #328]	@ (8000a50 <fnd_Write+0x4c4>)
 8000906:	68d1      	ldr	r1, [r2, #12]
 8000908:	2201      	movs	r2, #1
 800090a:	4618      	mov	r0, r3
 800090c:	f7ff fd4e 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[2].GPIOx, FND_FONT[2].pinNum, PIN_SET);
 8000910:	4b4f      	ldr	r3, [pc, #316]	@ (8000a50 <fnd_Write+0x4c4>)
 8000912:	691b      	ldr	r3, [r3, #16]
 8000914:	4a4e      	ldr	r2, [pc, #312]	@ (8000a50 <fnd_Write+0x4c4>)
 8000916:	6951      	ldr	r1, [r2, #20]
 8000918:	2201      	movs	r2, #1
 800091a:	4618      	mov	r0, r3
 800091c:	f7ff fd46 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[3].GPIOx, FND_FONT[3].pinNum, PIN_RESET);
 8000920:	4b4b      	ldr	r3, [pc, #300]	@ (8000a50 <fnd_Write+0x4c4>)
 8000922:	699b      	ldr	r3, [r3, #24]
 8000924:	4a4a      	ldr	r2, [pc, #296]	@ (8000a50 <fnd_Write+0x4c4>)
 8000926:	69d1      	ldr	r1, [r2, #28]
 8000928:	2200      	movs	r2, #0
 800092a:	4618      	mov	r0, r3
 800092c:	f7ff fd3e 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[4].GPIOx, FND_FONT[4].pinNum, PIN_RESET);
 8000930:	4b47      	ldr	r3, [pc, #284]	@ (8000a50 <fnd_Write+0x4c4>)
 8000932:	6a1b      	ldr	r3, [r3, #32]
 8000934:	4a46      	ldr	r2, [pc, #280]	@ (8000a50 <fnd_Write+0x4c4>)
 8000936:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000938:	2200      	movs	r2, #0
 800093a:	4618      	mov	r0, r3
 800093c:	f7ff fd36 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[5].GPIOx, FND_FONT[5].pinNum, PIN_SET);
 8000940:	4b43      	ldr	r3, [pc, #268]	@ (8000a50 <fnd_Write+0x4c4>)
 8000942:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000944:	4a42      	ldr	r2, [pc, #264]	@ (8000a50 <fnd_Write+0x4c4>)
 8000946:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000948:	2201      	movs	r2, #1
 800094a:	4618      	mov	r0, r3
 800094c:	f7ff fd2e 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[6].GPIOx, FND_FONT[6].pinNum, PIN_RESET);
 8000950:	4b3f      	ldr	r3, [pc, #252]	@ (8000a50 <fnd_Write+0x4c4>)
 8000952:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000954:	4a3e      	ldr	r2, [pc, #248]	@ (8000a50 <fnd_Write+0x4c4>)
 8000956:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000958:	2200      	movs	r2, #0
 800095a:	4618      	mov	r0, r3
 800095c:	f7ff fd26 	bl	80003ac <GPIO_WritePin>
		break;
 8000960:	e071      	b.n	8000a46 <fnd_Write+0x4ba>

	case 8:
		GPIO_WritePin(FND_FONT[0].GPIOx, FND_FONT[0].pinNum, PIN_SET);
 8000962:	4b3b      	ldr	r3, [pc, #236]	@ (8000a50 <fnd_Write+0x4c4>)
 8000964:	681b      	ldr	r3, [r3, #0]
 8000966:	4a3a      	ldr	r2, [pc, #232]	@ (8000a50 <fnd_Write+0x4c4>)
 8000968:	6851      	ldr	r1, [r2, #4]
 800096a:	2201      	movs	r2, #1
 800096c:	4618      	mov	r0, r3
 800096e:	f7ff fd1d 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[1].GPIOx, FND_FONT[1].pinNum, PIN_SET);
 8000972:	4b37      	ldr	r3, [pc, #220]	@ (8000a50 <fnd_Write+0x4c4>)
 8000974:	689b      	ldr	r3, [r3, #8]
 8000976:	4a36      	ldr	r2, [pc, #216]	@ (8000a50 <fnd_Write+0x4c4>)
 8000978:	68d1      	ldr	r1, [r2, #12]
 800097a:	2201      	movs	r2, #1
 800097c:	4618      	mov	r0, r3
 800097e:	f7ff fd15 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[2].GPIOx, FND_FONT[2].pinNum, PIN_SET);
 8000982:	4b33      	ldr	r3, [pc, #204]	@ (8000a50 <fnd_Write+0x4c4>)
 8000984:	691b      	ldr	r3, [r3, #16]
 8000986:	4a32      	ldr	r2, [pc, #200]	@ (8000a50 <fnd_Write+0x4c4>)
 8000988:	6951      	ldr	r1, [r2, #20]
 800098a:	2201      	movs	r2, #1
 800098c:	4618      	mov	r0, r3
 800098e:	f7ff fd0d 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[3].GPIOx, FND_FONT[3].pinNum, PIN_SET);
 8000992:	4b2f      	ldr	r3, [pc, #188]	@ (8000a50 <fnd_Write+0x4c4>)
 8000994:	699b      	ldr	r3, [r3, #24]
 8000996:	4a2e      	ldr	r2, [pc, #184]	@ (8000a50 <fnd_Write+0x4c4>)
 8000998:	69d1      	ldr	r1, [r2, #28]
 800099a:	2201      	movs	r2, #1
 800099c:	4618      	mov	r0, r3
 800099e:	f7ff fd05 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[4].GPIOx, FND_FONT[4].pinNum, PIN_SET);
 80009a2:	4b2b      	ldr	r3, [pc, #172]	@ (8000a50 <fnd_Write+0x4c4>)
 80009a4:	6a1b      	ldr	r3, [r3, #32]
 80009a6:	4a2a      	ldr	r2, [pc, #168]	@ (8000a50 <fnd_Write+0x4c4>)
 80009a8:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80009aa:	2201      	movs	r2, #1
 80009ac:	4618      	mov	r0, r3
 80009ae:	f7ff fcfd 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[5].GPIOx, FND_FONT[5].pinNum, PIN_SET);
 80009b2:	4b27      	ldr	r3, [pc, #156]	@ (8000a50 <fnd_Write+0x4c4>)
 80009b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80009b6:	4a26      	ldr	r2, [pc, #152]	@ (8000a50 <fnd_Write+0x4c4>)
 80009b8:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 80009ba:	2201      	movs	r2, #1
 80009bc:	4618      	mov	r0, r3
 80009be:	f7ff fcf5 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[6].GPIOx, FND_FONT[6].pinNum, PIN_SET);
 80009c2:	4b23      	ldr	r3, [pc, #140]	@ (8000a50 <fnd_Write+0x4c4>)
 80009c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009c6:	4a22      	ldr	r2, [pc, #136]	@ (8000a50 <fnd_Write+0x4c4>)
 80009c8:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 80009ca:	2201      	movs	r2, #1
 80009cc:	4618      	mov	r0, r3
 80009ce:	f7ff fced 	bl	80003ac <GPIO_WritePin>
		break;
 80009d2:	e038      	b.n	8000a46 <fnd_Write+0x4ba>

	case 9:
		GPIO_WritePin(FND_FONT[0].GPIOx, FND_FONT[0].pinNum, PIN_SET);
 80009d4:	4b1e      	ldr	r3, [pc, #120]	@ (8000a50 <fnd_Write+0x4c4>)
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4a1d      	ldr	r2, [pc, #116]	@ (8000a50 <fnd_Write+0x4c4>)
 80009da:	6851      	ldr	r1, [r2, #4]
 80009dc:	2201      	movs	r2, #1
 80009de:	4618      	mov	r0, r3
 80009e0:	f7ff fce4 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[1].GPIOx, FND_FONT[1].pinNum, PIN_SET);
 80009e4:	4b1a      	ldr	r3, [pc, #104]	@ (8000a50 <fnd_Write+0x4c4>)
 80009e6:	689b      	ldr	r3, [r3, #8]
 80009e8:	4a19      	ldr	r2, [pc, #100]	@ (8000a50 <fnd_Write+0x4c4>)
 80009ea:	68d1      	ldr	r1, [r2, #12]
 80009ec:	2201      	movs	r2, #1
 80009ee:	4618      	mov	r0, r3
 80009f0:	f7ff fcdc 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[2].GPIOx, FND_FONT[2].pinNum, PIN_SET);
 80009f4:	4b16      	ldr	r3, [pc, #88]	@ (8000a50 <fnd_Write+0x4c4>)
 80009f6:	691b      	ldr	r3, [r3, #16]
 80009f8:	4a15      	ldr	r2, [pc, #84]	@ (8000a50 <fnd_Write+0x4c4>)
 80009fa:	6951      	ldr	r1, [r2, #20]
 80009fc:	2201      	movs	r2, #1
 80009fe:	4618      	mov	r0, r3
 8000a00:	f7ff fcd4 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[3].GPIOx, FND_FONT[3].pinNum, PIN_SET);
 8000a04:	4b12      	ldr	r3, [pc, #72]	@ (8000a50 <fnd_Write+0x4c4>)
 8000a06:	699b      	ldr	r3, [r3, #24]
 8000a08:	4a11      	ldr	r2, [pc, #68]	@ (8000a50 <fnd_Write+0x4c4>)
 8000a0a:	69d1      	ldr	r1, [r2, #28]
 8000a0c:	2201      	movs	r2, #1
 8000a0e:	4618      	mov	r0, r3
 8000a10:	f7ff fccc 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[4].GPIOx, FND_FONT[4].pinNum, PIN_RESET);
 8000a14:	4b0e      	ldr	r3, [pc, #56]	@ (8000a50 <fnd_Write+0x4c4>)
 8000a16:	6a1b      	ldr	r3, [r3, #32]
 8000a18:	4a0d      	ldr	r2, [pc, #52]	@ (8000a50 <fnd_Write+0x4c4>)
 8000a1a:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000a1c:	2200      	movs	r2, #0
 8000a1e:	4618      	mov	r0, r3
 8000a20:	f7ff fcc4 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[5].GPIOx, FND_FONT[5].pinNum, PIN_SET);
 8000a24:	4b0a      	ldr	r3, [pc, #40]	@ (8000a50 <fnd_Write+0x4c4>)
 8000a26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000a28:	4a09      	ldr	r2, [pc, #36]	@ (8000a50 <fnd_Write+0x4c4>)
 8000a2a:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000a2c:	2201      	movs	r2, #1
 8000a2e:	4618      	mov	r0, r3
 8000a30:	f7ff fcbc 	bl	80003ac <GPIO_WritePin>
		GPIO_WritePin(FND_FONT[6].GPIOx, FND_FONT[6].pinNum, PIN_SET);
 8000a34:	4b06      	ldr	r3, [pc, #24]	@ (8000a50 <fnd_Write+0x4c4>)
 8000a36:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a38:	4a05      	ldr	r2, [pc, #20]	@ (8000a50 <fnd_Write+0x4c4>)
 8000a3a:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000a3c:	2201      	movs	r2, #1
 8000a3e:	4618      	mov	r0, r3
 8000a40:	f7ff fcb4 	bl	80003ac <GPIO_WritePin>
		break;
 8000a44:	bf00      	nop
	}
}
 8000a46:	bf00      	nop
 8000a48:	3708      	adds	r7, #8
 8000a4a:	46bd      	mov	sp, r7
 8000a4c:	bd80      	pop	{r7, pc}
 8000a4e:	bf00      	nop
 8000a50:	20000000 	.word	0x20000000

08000a54 <FND_DisplayNumber>:

void FND_DisplayNumber(uint16_t number)
{
 8000a54:	b580      	push	{r7, lr}
 8000a56:	b086      	sub	sp, #24
 8000a58:	af00      	add	r7, sp, #0
 8000a5a:	4603      	mov	r3, r0
 8000a5c:	80fb      	strh	r3, [r7, #6]
   uint8_t digits[4];

   digits[0] = (number / 1000) % 10;
 8000a5e:	88fb      	ldrh	r3, [r7, #6]
 8000a60:	4a3e      	ldr	r2, [pc, #248]	@ (8000b5c <FND_DisplayNumber+0x108>)
 8000a62:	fba2 2303 	umull	r2, r3, r2, r3
 8000a66:	099b      	lsrs	r3, r3, #6
 8000a68:	b29a      	uxth	r2, r3
 8000a6a:	4b3d      	ldr	r3, [pc, #244]	@ (8000b60 <FND_DisplayNumber+0x10c>)
 8000a6c:	fba3 1302 	umull	r1, r3, r3, r2
 8000a70:	08d9      	lsrs	r1, r3, #3
 8000a72:	460b      	mov	r3, r1
 8000a74:	009b      	lsls	r3, r3, #2
 8000a76:	440b      	add	r3, r1
 8000a78:	005b      	lsls	r3, r3, #1
 8000a7a:	1ad3      	subs	r3, r2, r3
 8000a7c:	b29b      	uxth	r3, r3
 8000a7e:	b2db      	uxtb	r3, r3
 8000a80:	733b      	strb	r3, [r7, #12]
   digits[1] = (number / 100) % 10;
 8000a82:	88fb      	ldrh	r3, [r7, #6]
 8000a84:	4a37      	ldr	r2, [pc, #220]	@ (8000b64 <FND_DisplayNumber+0x110>)
 8000a86:	fba2 2303 	umull	r2, r3, r2, r3
 8000a8a:	095b      	lsrs	r3, r3, #5
 8000a8c:	b29a      	uxth	r2, r3
 8000a8e:	4b34      	ldr	r3, [pc, #208]	@ (8000b60 <FND_DisplayNumber+0x10c>)
 8000a90:	fba3 1302 	umull	r1, r3, r3, r2
 8000a94:	08d9      	lsrs	r1, r3, #3
 8000a96:	460b      	mov	r3, r1
 8000a98:	009b      	lsls	r3, r3, #2
 8000a9a:	440b      	add	r3, r1
 8000a9c:	005b      	lsls	r3, r3, #1
 8000a9e:	1ad3      	subs	r3, r2, r3
 8000aa0:	b29b      	uxth	r3, r3
 8000aa2:	b2db      	uxtb	r3, r3
 8000aa4:	737b      	strb	r3, [r7, #13]
   digits[2] = (number / 10) % 10;
 8000aa6:	88fb      	ldrh	r3, [r7, #6]
 8000aa8:	4a2d      	ldr	r2, [pc, #180]	@ (8000b60 <FND_DisplayNumber+0x10c>)
 8000aaa:	fba2 2303 	umull	r2, r3, r2, r3
 8000aae:	08db      	lsrs	r3, r3, #3
 8000ab0:	b29a      	uxth	r2, r3
 8000ab2:	4b2b      	ldr	r3, [pc, #172]	@ (8000b60 <FND_DisplayNumber+0x10c>)
 8000ab4:	fba3 1302 	umull	r1, r3, r3, r2
 8000ab8:	08d9      	lsrs	r1, r3, #3
 8000aba:	460b      	mov	r3, r1
 8000abc:	009b      	lsls	r3, r3, #2
 8000abe:	440b      	add	r3, r1
 8000ac0:	005b      	lsls	r3, r3, #1
 8000ac2:	1ad3      	subs	r3, r2, r3
 8000ac4:	b29b      	uxth	r3, r3
 8000ac6:	b2db      	uxtb	r3, r3
 8000ac8:	73bb      	strb	r3, [r7, #14]
   digits[3] = number % 10;
 8000aca:	88fa      	ldrh	r2, [r7, #6]
 8000acc:	4b24      	ldr	r3, [pc, #144]	@ (8000b60 <FND_DisplayNumber+0x10c>)
 8000ace:	fba3 1302 	umull	r1, r3, r3, r2
 8000ad2:	08d9      	lsrs	r1, r3, #3
 8000ad4:	460b      	mov	r3, r1
 8000ad6:	009b      	lsls	r3, r3, #2
 8000ad8:	440b      	add	r3, r1
 8000ada:	005b      	lsls	r3, r3, #1
 8000adc:	1ad3      	subs	r3, r2, r3
 8000ade:	b29b      	uxth	r3, r3
 8000ae0:	b2db      	uxtb	r3, r3
 8000ae2:	73fb      	strb	r3, [r7, #15]

   for (int i = 0; i < 4; i++)
 8000ae4:	2300      	movs	r3, #0
 8000ae6:	617b      	str	r3, [r7, #20]
 8000ae8:	e030      	b.n	8000b4c <FND_DisplayNumber+0xf8>
   {
      for (int j = 0; j < 4; j++)
 8000aea:	2300      	movs	r3, #0
 8000aec:	613b      	str	r3, [r7, #16]
 8000aee:	e00f      	b.n	8000b10 <FND_DisplayNumber+0xbc>
         GPIO_WritePin(FND_COMM[j].GPIOx, FND_COMM[j].pinNum, PIN_SET);
 8000af0:	4a1d      	ldr	r2, [pc, #116]	@ (8000b68 <FND_DisplayNumber+0x114>)
 8000af2:	693b      	ldr	r3, [r7, #16]
 8000af4:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8000af8:	4a1b      	ldr	r2, [pc, #108]	@ (8000b68 <FND_DisplayNumber+0x114>)
 8000afa:	693b      	ldr	r3, [r7, #16]
 8000afc:	00db      	lsls	r3, r3, #3
 8000afe:	4413      	add	r3, r2
 8000b00:	685b      	ldr	r3, [r3, #4]
 8000b02:	2201      	movs	r2, #1
 8000b04:	4619      	mov	r1, r3
 8000b06:	f7ff fc51 	bl	80003ac <GPIO_WritePin>
      for (int j = 0; j < 4; j++)
 8000b0a:	693b      	ldr	r3, [r7, #16]
 8000b0c:	3301      	adds	r3, #1
 8000b0e:	613b      	str	r3, [r7, #16]
 8000b10:	693b      	ldr	r3, [r7, #16]
 8000b12:	2b03      	cmp	r3, #3
 8000b14:	ddec      	ble.n	8000af0 <FND_DisplayNumber+0x9c>

      fnd_Write(digits[i]);
 8000b16:	f107 020c 	add.w	r2, r7, #12
 8000b1a:	697b      	ldr	r3, [r7, #20]
 8000b1c:	4413      	add	r3, r2
 8000b1e:	781b      	ldrb	r3, [r3, #0]
 8000b20:	4618      	mov	r0, r3
 8000b22:	f7ff fd33 	bl	800058c <fnd_Write>

      GPIO_WritePin(FND_COMM[i].GPIOx, FND_COMM[i].pinNum, PIN_RESET);
 8000b26:	4a10      	ldr	r2, [pc, #64]	@ (8000b68 <FND_DisplayNumber+0x114>)
 8000b28:	697b      	ldr	r3, [r7, #20]
 8000b2a:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8000b2e:	4a0e      	ldr	r2, [pc, #56]	@ (8000b68 <FND_DisplayNumber+0x114>)
 8000b30:	697b      	ldr	r3, [r7, #20]
 8000b32:	00db      	lsls	r3, r3, #3
 8000b34:	4413      	add	r3, r2
 8000b36:	685b      	ldr	r3, [r3, #4]
 8000b38:	2200      	movs	r2, #0
 8000b3a:	4619      	mov	r1, r3
 8000b3c:	f7ff fc36 	bl	80003ac <GPIO_WritePin>

      delay(1);
 8000b40:	2001      	movs	r0, #1
 8000b42:	f7ff fcbd 	bl	80004c0 <delay>
   for (int i = 0; i < 4; i++)
 8000b46:	697b      	ldr	r3, [r7, #20]
 8000b48:	3301      	adds	r3, #1
 8000b4a:	617b      	str	r3, [r7, #20]
 8000b4c:	697b      	ldr	r3, [r7, #20]
 8000b4e:	2b03      	cmp	r3, #3
 8000b50:	ddcb      	ble.n	8000aea <FND_DisplayNumber+0x96>
   }
}
 8000b52:	bf00      	nop
 8000b54:	bf00      	nop
 8000b56:	3718      	adds	r7, #24
 8000b58:	46bd      	mov	sp, r7
 8000b5a:	bd80      	pop	{r7, pc}
 8000b5c:	10624dd3 	.word	0x10624dd3
 8000b60:	cccccccd 	.word	0xcccccccd
 8000b64:	51eb851f 	.word	0x51eb851f
 8000b68:	20000040 	.word	0x20000040

08000b6c <main>:

#include "ap_main.h"


int main(void)
{
 8000b6c:	b580      	push	{r7, lr}
 8000b6e:	af00      	add	r7, sp, #0
	ap_init();
 8000b70:	f7ff fb7e 	bl	8000270 <ap_init>
	fnd_Init();
 8000b74:	f7ff fcc4 	bl	8000500 <fnd_Init>

	while(1)
	{

		ap_main();
 8000b78:	f7ff fb2e 	bl	80001d8 <ap_main>
 8000b7c:	e7fc      	b.n	8000b78 <main+0xc>
	...

08000b80 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000b80:	480d      	ldr	r0, [pc, #52]	@ (8000bb8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000b82:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000b84:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000b88:	480c      	ldr	r0, [pc, #48]	@ (8000bbc <LoopForever+0x6>)
  ldr r1, =_edata
 8000b8a:	490d      	ldr	r1, [pc, #52]	@ (8000bc0 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000b8c:	4a0d      	ldr	r2, [pc, #52]	@ (8000bc4 <LoopForever+0xe>)
  movs r3, #0
 8000b8e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000b90:	e002      	b.n	8000b98 <LoopCopyDataInit>

08000b92 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000b92:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000b94:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000b96:	3304      	adds	r3, #4

08000b98 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000b98:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000b9a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000b9c:	d3f9      	bcc.n	8000b92 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000b9e:	4a0a      	ldr	r2, [pc, #40]	@ (8000bc8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000ba0:	4c0a      	ldr	r4, [pc, #40]	@ (8000bcc <LoopForever+0x16>)
  movs r3, #0
 8000ba2:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000ba4:	e001      	b.n	8000baa <LoopFillZerobss>

08000ba6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000ba6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000ba8:	3204      	adds	r2, #4

08000baa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000baa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000bac:	d3fb      	bcc.n	8000ba6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000bae:	f000 f811 	bl	8000bd4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000bb2:	f7ff ffdb 	bl	8000b6c <main>

08000bb6 <LoopForever>:

LoopForever:
  b LoopForever
 8000bb6:	e7fe      	b.n	8000bb6 <LoopForever>
  ldr   r0, =_estack
 8000bb8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000bbc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000bc0:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 8000bc4:	08000c3c 	.word	0x08000c3c
  ldr r2, =_sbss
 8000bc8:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 8000bcc:	200000a0 	.word	0x200000a0

08000bd0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000bd0:	e7fe      	b.n	8000bd0 <ADC_IRQHandler>
	...

08000bd4 <__libc_init_array>:
 8000bd4:	b570      	push	{r4, r5, r6, lr}
 8000bd6:	4d0d      	ldr	r5, [pc, #52]	@ (8000c0c <__libc_init_array+0x38>)
 8000bd8:	4c0d      	ldr	r4, [pc, #52]	@ (8000c10 <__libc_init_array+0x3c>)
 8000bda:	1b64      	subs	r4, r4, r5
 8000bdc:	10a4      	asrs	r4, r4, #2
 8000bde:	2600      	movs	r6, #0
 8000be0:	42a6      	cmp	r6, r4
 8000be2:	d109      	bne.n	8000bf8 <__libc_init_array+0x24>
 8000be4:	4d0b      	ldr	r5, [pc, #44]	@ (8000c14 <__libc_init_array+0x40>)
 8000be6:	4c0c      	ldr	r4, [pc, #48]	@ (8000c18 <__libc_init_array+0x44>)
 8000be8:	f000 f818 	bl	8000c1c <_init>
 8000bec:	1b64      	subs	r4, r4, r5
 8000bee:	10a4      	asrs	r4, r4, #2
 8000bf0:	2600      	movs	r6, #0
 8000bf2:	42a6      	cmp	r6, r4
 8000bf4:	d105      	bne.n	8000c02 <__libc_init_array+0x2e>
 8000bf6:	bd70      	pop	{r4, r5, r6, pc}
 8000bf8:	f855 3b04 	ldr.w	r3, [r5], #4
 8000bfc:	4798      	blx	r3
 8000bfe:	3601      	adds	r6, #1
 8000c00:	e7ee      	b.n	8000be0 <__libc_init_array+0xc>
 8000c02:	f855 3b04 	ldr.w	r3, [r5], #4
 8000c06:	4798      	blx	r3
 8000c08:	3601      	adds	r6, #1
 8000c0a:	e7f2      	b.n	8000bf2 <__libc_init_array+0x1e>
 8000c0c:	08000c34 	.word	0x08000c34
 8000c10:	08000c34 	.word	0x08000c34
 8000c14:	08000c34 	.word	0x08000c34
 8000c18:	08000c38 	.word	0x08000c38

08000c1c <_init>:
 8000c1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c1e:	bf00      	nop
 8000c20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c22:	bc08      	pop	{r3}
 8000c24:	469e      	mov	lr, r3
 8000c26:	4770      	bx	lr

08000c28 <_fini>:
 8000c28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c2a:	bf00      	nop
 8000c2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c2e:	bc08      	pop	{r3}
 8000c30:	469e      	mov	lr, r3
 8000c32:	4770      	bx	lr
