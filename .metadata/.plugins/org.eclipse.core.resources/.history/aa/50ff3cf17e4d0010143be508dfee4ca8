/*
 * FND.c
 *
 *  Created on: Jun 20, 2025
 *      Author: kccistc
 */


#include "FND.h"

enum {DIGIT1, DIGIT10, DIGIT100, DIGIT1000};

typedef struct {
	GPIO_TypeDef *GPIOx;
	uint32_t pinNum;
}FND_TypeDef;

FND_TypeDef fndDigitCom[4] = {
		{GPIOC, 8},
		{GPIOC, 6},
		{GPIOC, 5},
		{GPIOA, 12},
};

FND_TypeDef fndFont[8] = {
		{GPIOA, 11},  // A
		{GPIOB, 12},  // B
		{GPIOB, 2},   // C
		{GPIOB, 1},   // D
		{GPIOB, 15},  // E
		{GPIOB, 14},  // F
		{GPIOB, 13},  // G
		{GPIOC, 4}    // DP
};

uint16_t fndDispNum = 0; // fnd main data

// write fndDispNum
void FND_WriteData(uint16_t data)
{
	fndDispNum = data;
}
// read fndDispNum
uint16_t FND_ReadData()
{
	return fndDispNum;
}
// display fndDisNum
void FND_DispData()
{
	static int digitPos = 0;
	// 인터럽트가 발생하면 한 자리씩 출력
	digitPos = (digitPos + 1) % 4;
	switch(digitPos)
	{
	case DIGIT1:
		FND_DispOff(); // 끄고
		FND_DispDigit(digitPos, fndDispNum%10); // 출력
		FND_DispOn();  // 키고
		break;
	case DIGIT10:
		FND_DispOff(); // 끄고
		FND_DispDigit(digitPos, fndDispNum/10%10);
		FND_DispOn();  // 키고
		break;
	case DIGIT100:
		FND_DispOff(); // 끄고
		FND_DispDigit(digitPos, fndDispNum/100%10);
		FND_DispOn();  // 키고
		break;
	case DIGIT1000:
		FND_DispOff(); // 끄고
		FND_DispDigit(digitPos, fndDispNum/1000%10);
		FND_DispOn();  // 키고
		break;
	}
}

void FND_DispOff()
{
	// GPIO_Write(GPIOx, Pin, SET);
	for (int i = 0; i < 4; i ++) {
		GPIO_WritePin(fndDigitCom[i].GPIOx, fndDigitCom[i].pinNum, PIN_SET);
	}
}

void FND_DispOn(int digit)
{
	// GPIO_Write(GPIOx, Pin, RESET);
	GPIO_WritePin(fndDigitCom[digit].GPIOx, fndDigitCom[digit].pinNum, PIN_SET);
}

void FND_DispDigit(int digit, uint16_t data)
{
	for (int i = 0; i < 4; i ++) {
		if (!(data & (1<<i))) {
			GPIO_WritePin(fndDigitCom[i].GPIOx, fndDigitCom[i].pinNum, PIN_RESET);
		}
		else {
			GPIO_WritePin(fndDigitCom[i].GPIOx, fndDigitCom[i].pinNum, PIN_SET);
		}
	}
}

