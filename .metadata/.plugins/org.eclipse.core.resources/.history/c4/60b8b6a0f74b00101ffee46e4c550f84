#include <stdint.h>
//#include "stm32f411xe.h"

#define PERIPH_BASE       (0x40000000UL) // unsigned 4byte 숫자
#define APB1PERIPH_OFFSET (0x00000UL)
#define APB2PERIPH_OFFSET (0x10000UL)
#define AHB1PERIPH_OFFSET (0x20000UL)
#define APB1PERIPH_BASE   (PERIPH_BASE + APB1PERIPH_OFFSET)
#define APB2PERIPH_BASE   (PERIPH_BASE + APB2PERIPH_OFFSET)
#define AHB1PERIPH_BASE   (PERIPH_BASE + AHB1PERIPH_OFFSET)

#define GPIOA_OFFSET (0x0000UL)
#define GPIOB_OFFSET (0x0400UL)
#define GPIOC_OFFSET (0x0800UL)
#define GPIOD_OFFSET (0x0C00UL)
#define RCC_OFFSET   (0x3800UL)

#define GPIOA_BASE   (AHB1PERIPH_BASE + GPIOA_OFFSET)
#define GPIOB_BASE   (AHB1PERIPH_BASE + GPIOB_OFFSET)
#define GPIOC_BASE   (AHB1PERIPH_BASE + GPIOC_OFFSET)
#define GPIOD_BASE   (AHB1PERIPH_BASE + GPIOD_OFFSET)
#define RCC_BASE     (AHB1PERIPH_BASE + RCC_OFFSET)

// 직접 define
#define GPIOA_MODER    *(volatile uint32_t *)(GPIOA_BASE + 0x00)
#define GPIOA_OTYPER   *(volatile uint32_t *)(GPIOA_BASE + 0x04)
#define GPIOA_OSPEEDR  *(volatile uint32_t *)(GPIOA_BASE + 0x08)
#define GPIOA_PUPDR    *(volatile uint32_t *)(GPIOA_BASE + 0x0C)
#define GPIOA_IDR      *(volatile uint32_t *)(GPIOA_BASE + 0x10)
#define GPIOA_ODR      *(volatile uint32_t *)(GPIOA_BASE + 0x14)
#define GPIOA_BSRR     *(volatile uint32_t *)(GPIOA_BASE + 0x18)
#define GPIOA_LCKR     *(volatile uint32_t *)(GPIOA_BASE + 0x1C)
#define GPIOA_AFRL     *(volatile uint32_t *)(GPIOA_BASE + 0x20)
#define GPIOA_AFRH     *(volatile uint32_t *)(GPIOA_BASE + 0x24)

#define GPIOB_OTYPER   *(volatile uint32_t *)(GPIOB_BASE + 0x04)
#define GPIOB_OSPEEDR  *(volatile uint32_t *)(GPIOB_BASE + 0x08)
#define GPIOB_MODER    *(volatile uint32_t *)(GPIOB_BASE + 0x00)
#define GPIOB_PUPDR    *(volatile uint32_t *)(GPIOB_BASE + 0x0C)
#define GPIOB_IDR      *(volatile uint32_t *)(GPIOB_BASE + 0x10)
#define GPIOB_ODR      *(volatile uint32_t *)(GPIOB_BASE + 0x14)
#define GPIOB_BSRR     *(volatile uint32_t *)(GPIOB_BASE + 0x18)
#define GPIOB_LCKR     *(volatile uint32_t *)(GPIOB_BASE + 0x1C)
#define GPIOB_AFRL     *(volatile uint32_t *)(GPIOB_BASE + 0x20)
#define GPIOB_AFRH     *(volatile uint32_t *)(GPIOB_BASE + 0x24)

// 구조체 형식
typedef struct {
	volatile uint32_t MODER;
	volatile uint32_t OTYPER;
	volatile uint32_t OSPEEDR;
	volatile uint32_t PUPDR;
	volatile uint32_t IDR;
	volatile uint32_t ODR;
	volatile uint32_t BSRR;
	volatile uint32_t LCKR;
	volatile uint32_t AFR[2]; // 배열로 low , high
} GPIO_TypeDef;

#define GPIOA ((GPIO_TypeDef *)(GPIOA_BASE))
#define GPIOB ((GPIO_TypeDef *)(GPIOB_BASE))
#define GPIOC ((GPIO_TypeDef *)(GPIOC_BASE))


#define RCC_AHB1ENR *(volatile uint32_t *)0x40023830

void delay();

int main(void)
{
	/* 1. Enable clk access to GPIOA */
	RCC_AHB1ENR |= (1U << 0); // RCC_AHB1ENR
	/* 2. Set PA5 as output pin */
//	GPIOA_MODER |= (1U << 10); // GPIOA_MODER output mode
//	GPIOA_MODER &= ~(1U << 11); // GPIOA_MODER output mode
	GPIOA->MODER |= (1U << 10);
	GPIOA->MODER &= ~(1U << 11);

    while(1)
    {
    	/* 3. Set PA5 high */
    	//GPIOA_ODR |= (1U << 5);
    	GPIOA->ODR |= (1U << 5);
    	delay();
    	/* 4. Set PA5 low */
    	//GPIOA_ODR &= ~(1U << 5);
    	GPIOA->ODR &= ~(1U << 5);
    	delay();
    }
}

void delay()
{
	for(int i=0; i<100000; i++){}
}


