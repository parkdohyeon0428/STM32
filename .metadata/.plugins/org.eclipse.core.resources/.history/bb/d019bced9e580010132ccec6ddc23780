/*
 * TimeWatch.c
 *
 *  Created on: Jul 4, 2025
 *      Author: kccistc
 */

#include "TimeWatch.h"
#include <string.h>

timeWatch_t timeWatchData;

void TimeWatch_Init()
{
	timeWatchData.hour = 12;
	timeWatchData.min = 0;
	timeWatchData.sec = 0;
	timeWatchData.msec = 0;

   timeWatch_t *pTimeWatchData = osMailAlloc(timeWatchDataMailBox, 0);
   memcpy(pTimeWatchData, &timeWatchData, sizeof(timeWatch_t));
   osMailPut(timeWatchDataMailBox, pTimeWatchData);
}

void TimeWatch_Execute()
{
	eStopWatchState_t state = Model_GetStopWatchState();


	switch(state)
	{
	case S_TIMEWATCH_NORMAL:
		TimeWatch_Normal();
		break;
	case S_TIMEWATCH_MODIFY_HOUR:
		TimeWatch_ModifyHour();
		break;
	case S_TIMEWATCH_MODIFY_MIN:
		TimeWatch_ModifyMin();
		break;
	case S_TIMEWATCH_MODIFY_SEC:
		TimeWatch_ModifySec();
		break;
	default:
		break;
	}
}

void TimeWatch_Normal()
{
	static uint8_t prevMillSec = 0;
	if (prevMillSec == timeWatchData.msec) {
		return;
	}
	prevMillSec = timeWatchData.msec;

    timeWatch_t *pTimeWatchData = osMailAlloc(timeWatchDataMailBox, 0);
    memcpy(pTimeWatchData, &timeWatchData, sizeof(timeWatch_t));
    osMailPut(timeWatchDataMailBox, pTimeWatchData);
}

void TimeWatch_ModifyHour();



void TimeWatch_IncTimeCallBack()
{
	if (timeWatchData.msec != 1000-1) {
		timeWatchData.msec++;
		return;
	}
	timeWatchData.msec = 0;

	if (timeWatchData.sec != 60-1) {
		timeWatchData.sec++;
		return;
	}
	timeWatchData.sec = 0;

	if (timeWatchData.min != 60-1) {
		timeWatchData.min++;
		return;
	}
	timeWatchData.min = 0;

	if (timeWatchData.hour != 24-1) {
		timeWatchData.hour++;
		return;
	}
	timeWatchData.hour = 0;
}
